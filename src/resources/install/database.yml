---
# SQLITE
- name: Install Sqlite
  apt:
    name: sqlite3
    state: present
  when: database_connection == 'sqlite'

# pour sqlite le fichier doit etre creer pendant le deploiement

# MYSQL
- name: Make sure pymysql is present
  pip:
    name: pymysql
    state: present
  when: database_connection == 'mysql'

- name: Install MySql
  apt:
    name:
     - mysql-server
     - mysql-client
     - python3-mysqldb
    state: present
  when: database_connection == 'mysql'

- name: Ensure mysql is running and starts on boot
  service:
    name: mysql
    state: started
    enabled: yes
  when: database_connection == 'mysql'

- name: create /root/.my.cnf with root password credentials
  template:
    src: "{{ playbooks_directory_path }}/templates/my.cnf.j2"
    dest: /root/.my.cnf
    owner: root
    mode: 0600
    force: no
  when: database_connection == 'mysql'

- name: Ensure mysql root password is updated for all accounts
  mysql_user:
    name: root
    host: localhost
    login_unix_socket: /var/run/mysqld/mysqld.sock
    password: "{{ vault_database_root_password }}"
    priv: '*.*:ALL,GRANT'
    check_implicit_admin: yes
  no_log: yes
  when: database_connection == 'mysql'

- name: Remove anonymous user
  mysql_user:
    login_user: root
    login_password: "{{ vault_database_root_password }}"
    user: ""
    state: absent
  no_log: yes
  when: database_connection == 'mysql'

- name: Remove test database
  mysql_db:
    login_user: root
    login_password: "{{ vault_database_root_password }}"
    db: test
    state: absent
  when: database_connection == 'mysql'

- name: "Create database {{ database_name }}"
  mysql_db:
      login_user: root
      login_password: "{{ vault_database_root_password }}"
      db: "{{ database_name }}"
      state: present
  no_log: yes
  when: database_connection == 'mysql'

- name: "Create user {{ database_user }}"
  mysql_user:
      login_user: root
      login_password: "{{ vault_database_root_password }}"
      name: "{{ database_user }}"
      password: "{{ vault_database_password }}"
      host: "localhost"
      priv: '{{ database_name }}.*:ALL'
      state: present
  when: database_connection == 'mysql'
